# Generated by Django 2.2.7 on 2019-12-08 16:40

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('settings', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(help_text='Customer Name', max_length=50, verbose_name='Customer Name')),
                ('country', models.CharField(help_text='Customer Country', max_length=50, verbose_name='Country')),
                ('city', models.CharField(blank=True, help_text='Customer City', max_length=50, verbose_name='City')),
                ('street', models.CharField(blank=True, help_text='Customer Street', max_length=50, verbose_name='Street')),
                ('postal', models.CharField(blank=True, help_text='Customer Postal Code', max_length=20, verbose_name='Postal')),
            ],
            options={
                'verbose_name': 'customer',
                'verbose_name_plural': 'customers',
            },
        ),
        migrations.CreateModel(
            name='Day',
            fields=[
                ('date', models.DateField(primary_key=True, serialize=False)),
                ('start', models.TimeField(default=datetime.time(9, 0), verbose_name='Working Day Start Time')),
                ('end', models.TimeField(default=datetime.time(9, 0), verbose_name='Working Day End Time')),
                ('timeout', models.DurationField(default=datetime.timedelta(0), verbose_name='Total Break on this day')),
                ('withdrawal', models.DurationField(default=datetime.timedelta(0), verbose_name='One-time withdrawal')),
                ('is_vacation', models.BooleanField(default=False, verbose_name='Vacation')),
                ('is_public_holiday', models.BooleanField(default=False, verbose_name='Public Holiday')),
            ],
        ),
        migrations.CreateModel(
            name='Element',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_act_type', models.CharField(blank=True, help_text='Code to identify hourly rate (e.g. 012 in TG1012)', max_length=3, verbose_name='Activity Type Code')),
                ('receiver_ccenter', models.CharField(blank=True, default=None, max_length=5, verbose_name='Receiver Cost Center')),
                ('wbs_element', models.CharField(blank=True, default=None, max_length=20, verbose_name='WBS Element Name')),
                ('receiver_order', models.CharField(blank=True, default=None, max_length=6, verbose_name='Receiver Order')),
                ('description', models.CharField(max_length=20, verbose_name='Description')),
                ('active', models.BooleanField(default=True, help_text='Is this Element still active?', verbose_name='Active')),
                ('activity', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='elements', to='settings.Activity')),
            ],
            options={
                'verbose_name': 'element',
                'verbose_name_plural': 'elements',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(help_text='Element Group Name', max_length=20, verbose_name='Group Name')),
                ('active', models.BooleanField(default=True, help_text='Is this Element Group still active?', verbose_name='Active')),
                ('row', models.IntegerField(choices=[(1, 'Row 1'), (2, 'Row 2'), (3, 'Row 3')], default=1)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(blank=True, default=None, help_text='Customer', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='groups', to='tracker.Customer', verbose_name='Customer Name')),
            ],
            options={
                'verbose_name': 'group',
                'verbose_name_plural': 'groups',
            },
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.DurationField(help_text='Duration in HH:mm:ss Format', verbose_name='Duration of time attributed to Element')),
                ('description', models.CharField(blank=True, help_text='Will inherit description from Element if left empty', max_length=20, verbose_name='Description of Entry')),
                ('date', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='tracker.Day')),
                ('element', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='tracker.Element')),
                ('tag', models.ForeignKey(blank=True, default=None, help_text='Will inherit Tag from Element if left empty and Element has a Tag', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='entries', to='settings.Tag')),
            ],
            options={
                'verbose_name': 'entry',
                'verbose_name_plural': 'entries',
                'ordering': ['-date'],
            },
        ),
        migrations.AddField(
            model_name='element',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='elements', to='tracker.Group'),
        ),
        migrations.AddField(
            model_name='element',
            name='tag',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='elements', to='settings.Tag'),
        ),
        migrations.AddField(
            model_name='day',
            name='element',
            field=models.ManyToManyField(related_name='days', through='tracker.Entry', to='tracker.Element'),
        ),
    ]
